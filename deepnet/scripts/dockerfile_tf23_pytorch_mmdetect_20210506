ARG PYTORCH="1.6.0"
ARG CUDA="10.1"
ARG CUDNN="7"

FROM pytorch/pytorch:${PYTORCH}-cuda${CUDA}-cudnn${CUDNN}-devel

ENV TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0+PTX"
ENV TORCH_NVCC_FLAGS="-Xfatbin -compress-all"
ENV CMAKE_PREFIX_PATH="$(dirname $(which conda))/../"
LABEL maintainer "kabram@janelia.hhmi.org"

ENV DEBIAN_FRONTEND=noninteractive 
# for tzdata

RUN apt-get update && apt-get install -y ffmpeg libsm6 libxext6 git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 

# Below is to install cuda-10.1 if we need to compile anything for torch. For now we dont need it
#RUN wget https://developer.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda-repo-ubuntu1604-10-1-local-10.1.105-418.39_1.0-1_amd64.deb \
#	&& dpkg -i cuda-repo-ubuntu1604-10-1-local-10.1.105-418.39_1.0-1_amd64.deb \
#	&& gdebi /var/cuda-repo-10-1-local-10.1.105-418.39/cuda-toolkit-10-1_10.1.105-1_amd64.deb
#	&& rm -rf /var/cuda-repo-10-1-local-10.1.105-418.39


# For mmpose
# SPecific version of torch to work with mmpose
#RUN pip install torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html


# mmcv for mmpose
# This mmcv didn't work. 
#RUN pip install mmcv-full==1.3.2+torch1.6.0+cu101 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html
RUN pip install mmcv-full==latest+torch1.6.0+cu101 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html

#MMDETECTION
RUN conda clean --all
RUN git clone https://github.com/open-mmlab/mmdetection.git /mmdetection
WORKDIR /mmdetection
ENV FORCE_CUDA="1"
RUN pip install -r requirements/build.txt
RUN pip install --no-cache-dir -e .
WORKDIR /
RUN rm -rf /mmdetection
#COPY mmdetection_runtime.txt /opt/app/mmdetection_runtime.txt
#RUN pip install -r mmdetection_runtime.txt

# MMPOSE
# Install xtcocotools
RUN pip install cython 
#RUN pip install xtcocotools

RUN git clone https://github.com/jin-s13/xtcocoapi.git /xtcocotools
WORKDIR /xtcocotools
RUN pip install -r requirements.txt
RUN python setup.py install
COPY mmpose_runtime.txt /opt/app/mmpose_runtime.txt
WORKDIR /opt/app
RUN pip install -r mmpose_runtime.txt


RUN apt-get install -y vim \ 
    &&  apt-get install -y python-tk python3-tk tcl-dev tk-dev\ 
    &&  apt-get install -y software-properties-common \ 
#    &&  apt-get install -y gdebi \ 
    &&  add-apt-repository ppa:jonathonf/ffmpeg-4 \ 
    &&  apt-get update \ 
    &&  apt-get install -y ffmpeg x264 x265
RUN	 apt-get install -y libxtst6 \
&& apt-get install -y git \
&& apt-get clean \
 && rm -rf /var/lib/apt/lists/*

RUN pip install tensorflow==2.3 opencv-python  \
&& pip install keras==2.2.4 matplotlib \
	&& pip install ipython imageio h5py EasyDict scipy future scikit-image hdf5storage \
&& pip install clize packaging ruamel.yaml statsmodels tqdm
#RUN apt install -y python3-pip	
RUN pip install imgaug sklearn promise ordereddict func-timeout tfrecord progressbar
RUN pip install git+https://github.com/adrianc-a/tf-slim.git@remove_contrib
#RUN pip install deepposekit==0.3.4 



# Define default command.
CMD ["bash"]

